%% Question 2: Extract Tumor Part
input_img = imread('Q4_2.tif'); % Replace with the actual path to Q4_2

% Check if the image has multiple channels (RGB or similar)
if size(input_img, 3) > 1 % More than one channel
    gray_img = input_img(:, :, 1); % Use the first channel (e.g., Red channel)
else
    gray_img = input_img; % Already a single-channel (grayscale) image
end

% Adaptive binarization for tumor segmentation
bw_img = imbinarize(gray_img, 'adaptive'); 

% Fill holes to complete tumor regions
filled_img = imfill(bw_img, 'holes');

% Remove small objects less than 500 pixels (e.g., noise)
tumor_mask = bwareaopen(filled_img, 500);

% Create a highlighted version of the original grayscale image
highlighted_img = gray_img; % Start with the original grayscale image
highlighted_img(tumor_mask) = 255; % Highlight tumor region by setting it to white

% Apply the binary mask to isolate the tumor on a black background
isolated_tumor = uint8(tumor_mask) .* gray_img; % Keep only the tumor region

% Display the results
figure;
subplot(1, 3, 1), imshow(gray_img), title('Original Grayscale Image');
subplot(1, 3, 2), imshow(highlighted_img), title('Tumor Highlighted');
subplot(1, 3, 3), imshow(isolated_tumor, []), title('Tumor Isolated');

% Save the outputs
imwrite(highlighted_img, 'Q2_tumor_highlighted.jpg'); % Save the highlighted tumor image
imwrite(isolated_tumor, 'Q2_tumor_isolated.jpg'); % Save the isolated tumor image
